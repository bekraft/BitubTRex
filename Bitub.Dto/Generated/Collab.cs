// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Collab.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bitub.Dto.Collab {

  /// <summary>Holder for reflection information generated from Collab.proto</summary>
  public static partial class CollabReflection {

    #region Descriptor
    /// <summary>File descriptor for Collab.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CollabReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxDb2xsYWIucHJvdG8SEEJpdHViLkR0by5Db2xsYWIaDENvbW1vbi5wcm90",
            "bxoNU3BhdGlhbC5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5w",
            "cm90byKzAQoGUmVwb3J0EhwKAmlkGAEgASgLMhAuQml0dWIuRHRvLlJlZklk",
            "EicKBmlzc3VlcxgCIAMoCzIXLkJpdHViLkR0by5Db2xsYWIuSXNzdWUSKwoI",
            "Y29udGFjdHMYAyADKAsyGS5CaXR1Yi5EdG8uQ29sbGFiLkNvbnRhY3QSNQoK",
            "dmlld3BvaW50cxgEIAMoCzIhLkJpdHViLkR0by5Db2xsYWIuQ2FtZXJhVmll",
            "d3BvaW50IoMCCgVJc3N1ZRIlCgJpZBgBIAEoCzIZLkJpdHViLkR0by5HbG9i",
            "YWxVbmlxdWVJZBIQCghzZXZlcml0eRgCIAEoDRIyCg9yZXBvcnRlckNvbnRh",
            "Y3QYAyABKAsyGS5CaXR1Yi5EdG8uR2xvYmFsVW5pcXVlSWQSMAoNYXV0aG9y",
            "Q29udGFjdBgEIAEoCzIZLkJpdHViLkR0by5HbG9iYWxVbmlxdWVJZBIyCg9h",
            "c3NpZ25lZUNvbnRhY3QYBSABKAsyGS5CaXR1Yi5EdG8uR2xvYmFsVW5pcXVl",
            "SWQSEgoKc3RhZ2VMYWJlbBgGIAEoCRITCgtzdGF0dXNMYWJlbBgHIAEoCSLJ",
            "AQoHQ29tbWVudBIlCgJpZBgBIAEoCzIZLkJpdHViLkR0by5HbG9iYWxVbmlx",
            "dWVJZBIwCg1hdXRob3JDb250YWN0GAIgASgLMhkuQml0dWIuRHRvLkdsb2Jh",
            "bFVuaXF1ZUlkEikKBnRocmVhZBgDIAEoCzIZLkJpdHViLkR0by5HbG9iYWxV",
            "bmlxdWVJZBIPCgdjb21tZW50GAQgASgJEikKBXN0YW1wGAUgASgLMhouZ29v",
            "Z2xlLnByb3RvYnVmLlRpbWVzdGFtcCJfCgdDb250YWN0EiUKAmlkGAEgASgL",
            "MhkuQml0dWIuRHRvLkdsb2JhbFVuaXF1ZUlkEgwKBG5hbWUYAiABKAkSEQoJ",
            "Z2l2ZW5OYW1lGAMgASgJEgwKBG1haWwYBCABKAkiVwoPQ2FtZXJhVmlld3Bv",
            "aW50Ei8KCXZpZXdwb2ludBgBIAEoCzIcLkJpdHViLkR0by5TcGF0aWFsLlZp",
            "ZXdwb2ludBITCgtmaWVsZE9mVmlldxgCIAEoAiJyCgtBdHRhY2hlbWVudBIl",
            "CgJpZBgBIAEoCzIZLkJpdHViLkR0by5HbG9iYWxVbmlxdWVJZBIvCgR0eXBl",
            "GAIgASgOMiEuQml0dWIuRHRvLkNvbGxhYi5BdHRhY2hlbWVudFR5cGUSCwoD",
            "cmF3GAMgASgMKjgKD0F0dGFjaGVtZW50VHlwZRIJCgVQTEFJThAAEgcKA1BO",
            "RxABEgcKA0pQRxACEggKBEpTT04QA0IlChBiaXR1Yi5kdG8uY29sbGFiqgIQ",
            "Qml0dWIuRHRvLkNvbGxhYmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Bitub.Dto.CommonReflection.Descriptor, global::Bitub.Dto.Spatial.SpatialReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Bitub.Dto.Collab.AttachementType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Bitub.Dto.Collab.Report), global::Bitub.Dto.Collab.Report.Parser, new[]{ "Id", "Issues", "Contacts", "Viewpoints" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bitub.Dto.Collab.Issue), global::Bitub.Dto.Collab.Issue.Parser, new[]{ "Id", "Severity", "ReporterContact", "AuthorContact", "AssigneeContact", "StageLabel", "StatusLabel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bitub.Dto.Collab.Comment), global::Bitub.Dto.Collab.Comment.Parser, new[]{ "Id", "AuthorContact", "Thread", "Comment_", "Stamp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bitub.Dto.Collab.Contact), global::Bitub.Dto.Collab.Contact.Parser, new[]{ "Id", "Name", "GivenName", "Mail" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bitub.Dto.Collab.CameraViewpoint), global::Bitub.Dto.Collab.CameraViewpoint.Parser, new[]{ "Viewpoint", "FieldOfView" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bitub.Dto.Collab.Attachement), global::Bitub.Dto.Collab.Attachement.Parser, new[]{ "Id", "Type", "Raw" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum AttachementType {
    [pbr::OriginalName("PLAIN")] Plain = 0,
    [pbr::OriginalName("PNG")] Png = 1,
    [pbr::OriginalName("JPG")] Jpg = 2,
    [pbr::OriginalName("JSON")] Json = 3,
  }

  #endregion

  #region Messages
  public sealed partial class Report : pb::IMessage<Report> {
    private static readonly pb::MessageParser<Report> _parser = new pb::MessageParser<Report>(() => new Report());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Report> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bitub.Dto.Collab.CollabReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Report() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Report(Report other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      issues_ = other.issues_.Clone();
      contacts_ = other.contacts_.Clone();
      viewpoints_ = other.viewpoints_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Report Clone() {
      return new Report(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Bitub.Dto.RefId id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bitub.Dto.RefId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "issues" field.</summary>
    public const int IssuesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Bitub.Dto.Collab.Issue> _repeated_issues_codec
        = pb::FieldCodec.ForMessage(18, global::Bitub.Dto.Collab.Issue.Parser);
    private readonly pbc::RepeatedField<global::Bitub.Dto.Collab.Issue> issues_ = new pbc::RepeatedField<global::Bitub.Dto.Collab.Issue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bitub.Dto.Collab.Issue> Issues {
      get { return issues_; }
    }

    /// <summary>Field number for the "contacts" field.</summary>
    public const int ContactsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Bitub.Dto.Collab.Contact> _repeated_contacts_codec
        = pb::FieldCodec.ForMessage(26, global::Bitub.Dto.Collab.Contact.Parser);
    private readonly pbc::RepeatedField<global::Bitub.Dto.Collab.Contact> contacts_ = new pbc::RepeatedField<global::Bitub.Dto.Collab.Contact>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bitub.Dto.Collab.Contact> Contacts {
      get { return contacts_; }
    }

    /// <summary>Field number for the "viewpoints" field.</summary>
    public const int ViewpointsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Bitub.Dto.Collab.CameraViewpoint> _repeated_viewpoints_codec
        = pb::FieldCodec.ForMessage(34, global::Bitub.Dto.Collab.CameraViewpoint.Parser);
    private readonly pbc::RepeatedField<global::Bitub.Dto.Collab.CameraViewpoint> viewpoints_ = new pbc::RepeatedField<global::Bitub.Dto.Collab.CameraViewpoint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bitub.Dto.Collab.CameraViewpoint> Viewpoints {
      get { return viewpoints_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Report);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Report other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if(!issues_.Equals(other.issues_)) return false;
      if(!contacts_.Equals(other.contacts_)) return false;
      if(!viewpoints_.Equals(other.viewpoints_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      hash ^= issues_.GetHashCode();
      hash ^= contacts_.GetHashCode();
      hash ^= viewpoints_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      issues_.WriteTo(output, _repeated_issues_codec);
      contacts_.WriteTo(output, _repeated_contacts_codec);
      viewpoints_.WriteTo(output, _repeated_viewpoints_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      size += issues_.CalculateSize(_repeated_issues_codec);
      size += contacts_.CalculateSize(_repeated_contacts_codec);
      size += viewpoints_.CalculateSize(_repeated_viewpoints_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Report other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Bitub.Dto.RefId();
        }
        Id.MergeFrom(other.Id);
      }
      issues_.Add(other.issues_);
      contacts_.Add(other.contacts_);
      viewpoints_.Add(other.viewpoints_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Bitub.Dto.RefId();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            issues_.AddEntriesFrom(input, _repeated_issues_codec);
            break;
          }
          case 26: {
            contacts_.AddEntriesFrom(input, _repeated_contacts_codec);
            break;
          }
          case 34: {
            viewpoints_.AddEntriesFrom(input, _repeated_viewpoints_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Issue : pb::IMessage<Issue> {
    private static readonly pb::MessageParser<Issue> _parser = new pb::MessageParser<Issue>(() => new Issue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Issue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bitub.Dto.Collab.CollabReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Issue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Issue(Issue other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      severity_ = other.severity_;
      reporterContact_ = other.reporterContact_ != null ? other.reporterContact_.Clone() : null;
      authorContact_ = other.authorContact_ != null ? other.authorContact_.Clone() : null;
      assigneeContact_ = other.assigneeContact_ != null ? other.assigneeContact_.Clone() : null;
      stageLabel_ = other.stageLabel_;
      statusLabel_ = other.statusLabel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Issue Clone() {
      return new Issue(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Bitub.Dto.GlobalUniqueId id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bitub.Dto.GlobalUniqueId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "severity" field.</summary>
    public const int SeverityFieldNumber = 2;
    private uint severity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Severity {
      get { return severity_; }
      set {
        severity_ = value;
      }
    }

    /// <summary>Field number for the "reporterContact" field.</summary>
    public const int ReporterContactFieldNumber = 3;
    private global::Bitub.Dto.GlobalUniqueId reporterContact_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bitub.Dto.GlobalUniqueId ReporterContact {
      get { return reporterContact_; }
      set {
        reporterContact_ = value;
      }
    }

    /// <summary>Field number for the "authorContact" field.</summary>
    public const int AuthorContactFieldNumber = 4;
    private global::Bitub.Dto.GlobalUniqueId authorContact_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bitub.Dto.GlobalUniqueId AuthorContact {
      get { return authorContact_; }
      set {
        authorContact_ = value;
      }
    }

    /// <summary>Field number for the "assigneeContact" field.</summary>
    public const int AssigneeContactFieldNumber = 5;
    private global::Bitub.Dto.GlobalUniqueId assigneeContact_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bitub.Dto.GlobalUniqueId AssigneeContact {
      get { return assigneeContact_; }
      set {
        assigneeContact_ = value;
      }
    }

    /// <summary>Field number for the "stageLabel" field.</summary>
    public const int StageLabelFieldNumber = 6;
    private string stageLabel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StageLabel {
      get { return stageLabel_; }
      set {
        stageLabel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "statusLabel" field.</summary>
    public const int StatusLabelFieldNumber = 7;
    private string statusLabel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StatusLabel {
      get { return statusLabel_; }
      set {
        statusLabel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Issue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Issue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (Severity != other.Severity) return false;
      if (!object.Equals(ReporterContact, other.ReporterContact)) return false;
      if (!object.Equals(AuthorContact, other.AuthorContact)) return false;
      if (!object.Equals(AssigneeContact, other.AssigneeContact)) return false;
      if (StageLabel != other.StageLabel) return false;
      if (StatusLabel != other.StatusLabel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (Severity != 0) hash ^= Severity.GetHashCode();
      if (reporterContact_ != null) hash ^= ReporterContact.GetHashCode();
      if (authorContact_ != null) hash ^= AuthorContact.GetHashCode();
      if (assigneeContact_ != null) hash ^= AssigneeContact.GetHashCode();
      if (StageLabel.Length != 0) hash ^= StageLabel.GetHashCode();
      if (StatusLabel.Length != 0) hash ^= StatusLabel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (Severity != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Severity);
      }
      if (reporterContact_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ReporterContact);
      }
      if (authorContact_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(AuthorContact);
      }
      if (assigneeContact_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(AssigneeContact);
      }
      if (StageLabel.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(StageLabel);
      }
      if (StatusLabel.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(StatusLabel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (Severity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Severity);
      }
      if (reporterContact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReporterContact);
      }
      if (authorContact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AuthorContact);
      }
      if (assigneeContact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AssigneeContact);
      }
      if (StageLabel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StageLabel);
      }
      if (StatusLabel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StatusLabel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Issue other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Bitub.Dto.GlobalUniqueId();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.Severity != 0) {
        Severity = other.Severity;
      }
      if (other.reporterContact_ != null) {
        if (reporterContact_ == null) {
          ReporterContact = new global::Bitub.Dto.GlobalUniqueId();
        }
        ReporterContact.MergeFrom(other.ReporterContact);
      }
      if (other.authorContact_ != null) {
        if (authorContact_ == null) {
          AuthorContact = new global::Bitub.Dto.GlobalUniqueId();
        }
        AuthorContact.MergeFrom(other.AuthorContact);
      }
      if (other.assigneeContact_ != null) {
        if (assigneeContact_ == null) {
          AssigneeContact = new global::Bitub.Dto.GlobalUniqueId();
        }
        AssigneeContact.MergeFrom(other.AssigneeContact);
      }
      if (other.StageLabel.Length != 0) {
        StageLabel = other.StageLabel;
      }
      if (other.StatusLabel.Length != 0) {
        StatusLabel = other.StatusLabel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Bitub.Dto.GlobalUniqueId();
            }
            input.ReadMessage(Id);
            break;
          }
          case 16: {
            Severity = input.ReadUInt32();
            break;
          }
          case 26: {
            if (reporterContact_ == null) {
              ReporterContact = new global::Bitub.Dto.GlobalUniqueId();
            }
            input.ReadMessage(ReporterContact);
            break;
          }
          case 34: {
            if (authorContact_ == null) {
              AuthorContact = new global::Bitub.Dto.GlobalUniqueId();
            }
            input.ReadMessage(AuthorContact);
            break;
          }
          case 42: {
            if (assigneeContact_ == null) {
              AssigneeContact = new global::Bitub.Dto.GlobalUniqueId();
            }
            input.ReadMessage(AssigneeContact);
            break;
          }
          case 50: {
            StageLabel = input.ReadString();
            break;
          }
          case 58: {
            StatusLabel = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Comment : pb::IMessage<Comment> {
    private static readonly pb::MessageParser<Comment> _parser = new pb::MessageParser<Comment>(() => new Comment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Comment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bitub.Dto.Collab.CollabReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Comment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Comment(Comment other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      authorContact_ = other.authorContact_ != null ? other.authorContact_.Clone() : null;
      thread_ = other.thread_ != null ? other.thread_.Clone() : null;
      comment_ = other.comment_;
      stamp_ = other.stamp_ != null ? other.stamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Comment Clone() {
      return new Comment(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Bitub.Dto.GlobalUniqueId id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bitub.Dto.GlobalUniqueId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "authorContact" field.</summary>
    public const int AuthorContactFieldNumber = 2;
    private global::Bitub.Dto.GlobalUniqueId authorContact_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bitub.Dto.GlobalUniqueId AuthorContact {
      get { return authorContact_; }
      set {
        authorContact_ = value;
      }
    }

    /// <summary>Field number for the "thread" field.</summary>
    public const int ThreadFieldNumber = 3;
    private global::Bitub.Dto.GlobalUniqueId thread_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bitub.Dto.GlobalUniqueId Thread {
      get { return thread_; }
      set {
        thread_ = value;
      }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int Comment_FieldNumber = 4;
    private string comment_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Comment_ {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "stamp" field.</summary>
    public const int StampFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp stamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Stamp {
      get { return stamp_; }
      set {
        stamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Comment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Comment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(AuthorContact, other.AuthorContact)) return false;
      if (!object.Equals(Thread, other.Thread)) return false;
      if (Comment_ != other.Comment_) return false;
      if (!object.Equals(Stamp, other.Stamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (authorContact_ != null) hash ^= AuthorContact.GetHashCode();
      if (thread_ != null) hash ^= Thread.GetHashCode();
      if (Comment_.Length != 0) hash ^= Comment_.GetHashCode();
      if (stamp_ != null) hash ^= Stamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (authorContact_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AuthorContact);
      }
      if (thread_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Thread);
      }
      if (Comment_.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Comment_);
      }
      if (stamp_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Stamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (authorContact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AuthorContact);
      }
      if (thread_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Thread);
      }
      if (Comment_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment_);
      }
      if (stamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Comment other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Bitub.Dto.GlobalUniqueId();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.authorContact_ != null) {
        if (authorContact_ == null) {
          AuthorContact = new global::Bitub.Dto.GlobalUniqueId();
        }
        AuthorContact.MergeFrom(other.AuthorContact);
      }
      if (other.thread_ != null) {
        if (thread_ == null) {
          Thread = new global::Bitub.Dto.GlobalUniqueId();
        }
        Thread.MergeFrom(other.Thread);
      }
      if (other.Comment_.Length != 0) {
        Comment_ = other.Comment_;
      }
      if (other.stamp_ != null) {
        if (stamp_ == null) {
          Stamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Stamp.MergeFrom(other.Stamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Bitub.Dto.GlobalUniqueId();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (authorContact_ == null) {
              AuthorContact = new global::Bitub.Dto.GlobalUniqueId();
            }
            input.ReadMessage(AuthorContact);
            break;
          }
          case 26: {
            if (thread_ == null) {
              Thread = new global::Bitub.Dto.GlobalUniqueId();
            }
            input.ReadMessage(Thread);
            break;
          }
          case 34: {
            Comment_ = input.ReadString();
            break;
          }
          case 42: {
            if (stamp_ == null) {
              Stamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Stamp);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Contact : pb::IMessage<Contact> {
    private static readonly pb::MessageParser<Contact> _parser = new pb::MessageParser<Contact>(() => new Contact());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Contact> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bitub.Dto.Collab.CollabReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Contact() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Contact(Contact other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      name_ = other.name_;
      givenName_ = other.givenName_;
      mail_ = other.mail_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Contact Clone() {
      return new Contact(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Bitub.Dto.GlobalUniqueId id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bitub.Dto.GlobalUniqueId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "givenName" field.</summary>
    public const int GivenNameFieldNumber = 3;
    private string givenName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GivenName {
      get { return givenName_; }
      set {
        givenName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mail" field.</summary>
    public const int MailFieldNumber = 4;
    private string mail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mail {
      get { return mail_; }
      set {
        mail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Contact);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Contact other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (Name != other.Name) return false;
      if (GivenName != other.GivenName) return false;
      if (Mail != other.Mail) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (GivenName.Length != 0) hash ^= GivenName.GetHashCode();
      if (Mail.Length != 0) hash ^= Mail.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (GivenName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GivenName);
      }
      if (Mail.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Mail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (GivenName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GivenName);
      }
      if (Mail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mail);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Contact other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Bitub.Dto.GlobalUniqueId();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.GivenName.Length != 0) {
        GivenName = other.GivenName;
      }
      if (other.Mail.Length != 0) {
        Mail = other.Mail;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Bitub.Dto.GlobalUniqueId();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            GivenName = input.ReadString();
            break;
          }
          case 34: {
            Mail = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CameraViewpoint : pb::IMessage<CameraViewpoint> {
    private static readonly pb::MessageParser<CameraViewpoint> _parser = new pb::MessageParser<CameraViewpoint>(() => new CameraViewpoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CameraViewpoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bitub.Dto.Collab.CollabReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CameraViewpoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CameraViewpoint(CameraViewpoint other) : this() {
      viewpoint_ = other.viewpoint_ != null ? other.viewpoint_.Clone() : null;
      fieldOfView_ = other.fieldOfView_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CameraViewpoint Clone() {
      return new CameraViewpoint(this);
    }

    /// <summary>Field number for the "viewpoint" field.</summary>
    public const int ViewpointFieldNumber = 1;
    private global::Bitub.Dto.Spatial.Viewpoint viewpoint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bitub.Dto.Spatial.Viewpoint Viewpoint {
      get { return viewpoint_; }
      set {
        viewpoint_ = value;
      }
    }

    /// <summary>Field number for the "fieldOfView" field.</summary>
    public const int FieldOfViewFieldNumber = 2;
    private float fieldOfView_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float FieldOfView {
      get { return fieldOfView_; }
      set {
        fieldOfView_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CameraViewpoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CameraViewpoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Viewpoint, other.Viewpoint)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FieldOfView, other.FieldOfView)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (viewpoint_ != null) hash ^= Viewpoint.GetHashCode();
      if (FieldOfView != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FieldOfView);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (viewpoint_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Viewpoint);
      }
      if (FieldOfView != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(FieldOfView);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (viewpoint_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Viewpoint);
      }
      if (FieldOfView != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CameraViewpoint other) {
      if (other == null) {
        return;
      }
      if (other.viewpoint_ != null) {
        if (viewpoint_ == null) {
          Viewpoint = new global::Bitub.Dto.Spatial.Viewpoint();
        }
        Viewpoint.MergeFrom(other.Viewpoint);
      }
      if (other.FieldOfView != 0F) {
        FieldOfView = other.FieldOfView;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (viewpoint_ == null) {
              Viewpoint = new global::Bitub.Dto.Spatial.Viewpoint();
            }
            input.ReadMessage(Viewpoint);
            break;
          }
          case 21: {
            FieldOfView = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Attachement : pb::IMessage<Attachement> {
    private static readonly pb::MessageParser<Attachement> _parser = new pb::MessageParser<Attachement>(() => new Attachement());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Attachement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bitub.Dto.Collab.CollabReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attachement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attachement(Attachement other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      type_ = other.type_;
      raw_ = other.raw_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attachement Clone() {
      return new Attachement(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Bitub.Dto.GlobalUniqueId id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bitub.Dto.GlobalUniqueId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Bitub.Dto.Collab.AttachementType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bitub.Dto.Collab.AttachementType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "raw" field.</summary>
    public const int RawFieldNumber = 3;
    private pb::ByteString raw_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Raw {
      get { return raw_; }
      set {
        raw_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Attachement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Attachement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (Type != other.Type) return false;
      if (Raw != other.Raw) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Raw.Length != 0) hash ^= Raw.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (Raw.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Raw);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Raw.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Raw);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Attachement other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Bitub.Dto.GlobalUniqueId();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Raw.Length != 0) {
        Raw = other.Raw;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Bitub.Dto.GlobalUniqueId();
            }
            input.ReadMessage(Id);
            break;
          }
          case 16: {
            Type = (global::Bitub.Dto.Collab.AttachementType) input.ReadEnum();
            break;
          }
          case 26: {
            Raw = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
