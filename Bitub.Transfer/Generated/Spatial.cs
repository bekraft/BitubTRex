// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Spatial.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bitub.Transfer.Spatial {

  /// <summary>Holder for reflection information generated from Spatial.proto</summary>
  public static partial class SpatialReflection {

    #region Descriptor
    /// <summary>File descriptor for Spatial.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SpatialReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1TcGF0aWFsLnByb3RvEhZCaXR1Yi5UcmFuc2Zlci5TcGF0aWFsIiYKA1hZ",
            "WhIJCgF4GAEgASgBEgkKAXkYAiABKAESCQoBehgDIAEoASIiCgZMYXRMb24S",
            "CwoDbGF0GAEgASgBEgsKA2xvbhgCIAEoASKsAQoET0JveBIpCgRiYXNlGAEg",
            "ASgLMhsuQml0dWIuVHJhbnNmZXIuU3BhdGlhbC5YWVoSJwoCZXgYAiABKAsy",
            "Gy5CaXR1Yi5UcmFuc2Zlci5TcGF0aWFsLlhZWhInCgJleRgDIAEoCzIbLkJp",
            "dHViLlRyYW5zZmVyLlNwYXRpYWwuWFlaEicKAmV6GAQgASgLMhsuQml0dWIu",
            "VHJhbnNmZXIuU3BhdGlhbC5YWVoiWgoEQUJveBIoCgNtaW4YASABKAsyGy5C",
            "aXR1Yi5UcmFuc2Zlci5TcGF0aWFsLlhZWhIoCgNtYXgYAiABKAsyGy5CaXR1",
            "Yi5UcmFuc2Zlci5TcGF0aWFsLlhZWiJlCgtCb3VuZGluZ0JveBIqCgRvQm94",
            "GAEgASgLMhwuQml0dWIuVHJhbnNmZXIuU3BhdGlhbC5PQm94EioKBGFCb3gY",
            "AiABKAsyHC5CaXR1Yi5UcmFuc2Zlci5TcGF0aWFsLkFCb3giZQoGUmVnaW9u",
            "EhIKCnBvcHVsYXRpb24YASABKAUSDQoFbGFiZWwYAiABKAkSOAoLYm91bmRp",
            "bmdCb3gYAyABKAsyIy5CaXR1Yi5UcmFuc2Zlci5TcGF0aWFsLkJvdW5kaW5n",
            "Qm94In8KCVZpZXdwb2ludBIpCgRiYXNlGAEgASgLMhsuQml0dWIuVHJhbnNm",
            "ZXIuU3BhdGlhbC5YWVoSLAoHZm9yd2FyZBgCIAEoCzIbLkJpdHViLlRyYW5z",
            "ZmVyLlNwYXRpYWwuWFlaEgwKBG5lYXIYAyABKAISCwoDZmFyGAQgASgCQjEK",
            "FmJpdHViLnRyYW5zZmVyLnNwYXRpYWyqAhZCaXR1Yi5UcmFuc2Zlci5TcGF0",
            "aWFsYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Bitub.Transfer.Spatial.XYZ), global::Bitub.Transfer.Spatial.XYZ.Parser, new[]{ "X", "Y", "Z" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bitub.Transfer.Spatial.LatLon), global::Bitub.Transfer.Spatial.LatLon.Parser, new[]{ "Lat", "Lon" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bitub.Transfer.Spatial.OBox), global::Bitub.Transfer.Spatial.OBox.Parser, new[]{ "Base", "Ex", "Ey", "Ez" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bitub.Transfer.Spatial.ABox), global::Bitub.Transfer.Spatial.ABox.Parser, new[]{ "Min", "Max" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bitub.Transfer.Spatial.BoundingBox), global::Bitub.Transfer.Spatial.BoundingBox.Parser, new[]{ "OBox", "ABox" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bitub.Transfer.Spatial.Region), global::Bitub.Transfer.Spatial.Region.Parser, new[]{ "Population", "Label", "BoundingBox" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bitub.Transfer.Spatial.Viewpoint), global::Bitub.Transfer.Spatial.Viewpoint.Parser, new[]{ "Base", "Forward", "Near", "Far" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Standalone XYZ concept
  /// </summary>
  public sealed partial class XYZ : pb::IMessage<XYZ> {
    private static readonly pb::MessageParser<XYZ> _parser = new pb::MessageParser<XYZ>(() => new XYZ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<XYZ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bitub.Transfer.Spatial.SpatialReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XYZ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XYZ(XYZ other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XYZ Clone() {
      return new XYZ(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private double x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private double y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private double z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as XYZ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(XYZ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Z, other.Z)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(X);
      if (Y != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Y);
      if (Z != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Z);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(X);
      }
      if (Y != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Y);
      }
      if (Z != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0D) {
        size += 1 + 8;
      }
      if (Y != 0D) {
        size += 1 + 8;
      }
      if (Z != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(XYZ other) {
      if (other == null) {
        return;
      }
      if (other.X != 0D) {
        X = other.X;
      }
      if (other.Y != 0D) {
        Y = other.Y;
      }
      if (other.Z != 0D) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            X = input.ReadDouble();
            break;
          }
          case 17: {
            Y = input.ReadDouble();
            break;
          }
          case 25: {
            Z = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Standalone Latitude-Longitude concept
  /// </summary>
  public sealed partial class LatLon : pb::IMessage<LatLon> {
    private static readonly pb::MessageParser<LatLon> _parser = new pb::MessageParser<LatLon>(() => new LatLon());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LatLon> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bitub.Transfer.Spatial.SpatialReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LatLon() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LatLon(LatLon other) : this() {
      lat_ = other.lat_;
      lon_ = other.lon_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LatLon Clone() {
      return new LatLon(this);
    }

    /// <summary>Field number for the "lat" field.</summary>
    public const int LatFieldNumber = 1;
    private double lat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Lat {
      get { return lat_; }
      set {
        lat_ = value;
      }
    }

    /// <summary>Field number for the "lon" field.</summary>
    public const int LonFieldNumber = 2;
    private double lon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Lon {
      get { return lon_; }
      set {
        lon_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LatLon);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LatLon other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Lat, other.Lat)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Lon, other.Lon)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Lat != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Lat);
      if (Lon != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Lon);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Lat != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Lat);
      }
      if (Lon != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Lon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Lat != 0D) {
        size += 1 + 8;
      }
      if (Lon != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LatLon other) {
      if (other == null) {
        return;
      }
      if (other.Lat != 0D) {
        Lat = other.Lat;
      }
      if (other.Lon != 0D) {
        Lon = other.Lon;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Lat = input.ReadDouble();
            break;
          }
          case 17: {
            Lon = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Oriented bounding box with principal axes
  /// </summary>
  public sealed partial class OBox : pb::IMessage<OBox> {
    private static readonly pb::MessageParser<OBox> _parser = new pb::MessageParser<OBox>(() => new OBox());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OBox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bitub.Transfer.Spatial.SpatialReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OBox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OBox(OBox other) : this() {
      base_ = other.base_ != null ? other.base_.Clone() : null;
      ex_ = other.ex_ != null ? other.ex_.Clone() : null;
      ey_ = other.ey_ != null ? other.ey_.Clone() : null;
      ez_ = other.ez_ != null ? other.ez_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OBox Clone() {
      return new OBox(this);
    }

    /// <summary>Field number for the "base" field.</summary>
    public const int BaseFieldNumber = 1;
    private global::Bitub.Transfer.Spatial.XYZ base_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bitub.Transfer.Spatial.XYZ Base {
      get { return base_; }
      set {
        base_ = value;
      }
    }

    /// <summary>Field number for the "ex" field.</summary>
    public const int ExFieldNumber = 2;
    private global::Bitub.Transfer.Spatial.XYZ ex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bitub.Transfer.Spatial.XYZ Ex {
      get { return ex_; }
      set {
        ex_ = value;
      }
    }

    /// <summary>Field number for the "ey" field.</summary>
    public const int EyFieldNumber = 3;
    private global::Bitub.Transfer.Spatial.XYZ ey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bitub.Transfer.Spatial.XYZ Ey {
      get { return ey_; }
      set {
        ey_ = value;
      }
    }

    /// <summary>Field number for the "ez" field.</summary>
    public const int EzFieldNumber = 4;
    private global::Bitub.Transfer.Spatial.XYZ ez_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bitub.Transfer.Spatial.XYZ Ez {
      get { return ez_; }
      set {
        ez_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OBox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OBox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Base, other.Base)) return false;
      if (!object.Equals(Ex, other.Ex)) return false;
      if (!object.Equals(Ey, other.Ey)) return false;
      if (!object.Equals(Ez, other.Ez)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (base_ != null) hash ^= Base.GetHashCode();
      if (ex_ != null) hash ^= Ex.GetHashCode();
      if (ey_ != null) hash ^= Ey.GetHashCode();
      if (ez_ != null) hash ^= Ez.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (base_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Base);
      }
      if (ex_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Ex);
      }
      if (ey_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Ey);
      }
      if (ez_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Ez);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (base_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Base);
      }
      if (ex_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ex);
      }
      if (ey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ey);
      }
      if (ez_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ez);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OBox other) {
      if (other == null) {
        return;
      }
      if (other.base_ != null) {
        if (base_ == null) {
          Base = new global::Bitub.Transfer.Spatial.XYZ();
        }
        Base.MergeFrom(other.Base);
      }
      if (other.ex_ != null) {
        if (ex_ == null) {
          Ex = new global::Bitub.Transfer.Spatial.XYZ();
        }
        Ex.MergeFrom(other.Ex);
      }
      if (other.ey_ != null) {
        if (ey_ == null) {
          Ey = new global::Bitub.Transfer.Spatial.XYZ();
        }
        Ey.MergeFrom(other.Ey);
      }
      if (other.ez_ != null) {
        if (ez_ == null) {
          Ez = new global::Bitub.Transfer.Spatial.XYZ();
        }
        Ez.MergeFrom(other.Ez);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (base_ == null) {
              Base = new global::Bitub.Transfer.Spatial.XYZ();
            }
            input.ReadMessage(Base);
            break;
          }
          case 18: {
            if (ex_ == null) {
              Ex = new global::Bitub.Transfer.Spatial.XYZ();
            }
            input.ReadMessage(Ex);
            break;
          }
          case 26: {
            if (ey_ == null) {
              Ey = new global::Bitub.Transfer.Spatial.XYZ();
            }
            input.ReadMessage(Ey);
            break;
          }
          case 34: {
            if (ez_ == null) {
              Ez = new global::Bitub.Transfer.Spatial.XYZ();
            }
            input.ReadMessage(Ez);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Aligned bounding box having global axis as principal axes
  /// </summary>
  public sealed partial class ABox : pb::IMessage<ABox> {
    private static readonly pb::MessageParser<ABox> _parser = new pb::MessageParser<ABox>(() => new ABox());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ABox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bitub.Transfer.Spatial.SpatialReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ABox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ABox(ABox other) : this() {
      min_ = other.min_ != null ? other.min_.Clone() : null;
      max_ = other.max_ != null ? other.max_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ABox Clone() {
      return new ABox(this);
    }

    /// <summary>Field number for the "min" field.</summary>
    public const int MinFieldNumber = 1;
    private global::Bitub.Transfer.Spatial.XYZ min_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bitub.Transfer.Spatial.XYZ Min {
      get { return min_; }
      set {
        min_ = value;
      }
    }

    /// <summary>Field number for the "max" field.</summary>
    public const int MaxFieldNumber = 2;
    private global::Bitub.Transfer.Spatial.XYZ max_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bitub.Transfer.Spatial.XYZ Max {
      get { return max_; }
      set {
        max_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ABox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ABox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Min, other.Min)) return false;
      if (!object.Equals(Max, other.Max)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (min_ != null) hash ^= Min.GetHashCode();
      if (max_ != null) hash ^= Max.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (min_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Min);
      }
      if (max_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Max);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (min_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Min);
      }
      if (max_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Max);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ABox other) {
      if (other == null) {
        return;
      }
      if (other.min_ != null) {
        if (min_ == null) {
          Min = new global::Bitub.Transfer.Spatial.XYZ();
        }
        Min.MergeFrom(other.Min);
      }
      if (other.max_ != null) {
        if (max_ == null) {
          Max = new global::Bitub.Transfer.Spatial.XYZ();
        }
        Max.MergeFrom(other.Max);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (min_ == null) {
              Min = new global::Bitub.Transfer.Spatial.XYZ();
            }
            input.ReadMessage(Min);
            break;
          }
          case 18: {
            if (max_ == null) {
              Max = new global::Bitub.Transfer.Spatial.XYZ();
            }
            input.ReadMessage(Max);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Bounding box select
  /// </summary>
  public sealed partial class BoundingBox : pb::IMessage<BoundingBox> {
    private static readonly pb::MessageParser<BoundingBox> _parser = new pb::MessageParser<BoundingBox>(() => new BoundingBox());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BoundingBox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bitub.Transfer.Spatial.SpatialReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoundingBox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoundingBox(BoundingBox other) : this() {
      oBox_ = other.oBox_ != null ? other.oBox_.Clone() : null;
      aBox_ = other.aBox_ != null ? other.aBox_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoundingBox Clone() {
      return new BoundingBox(this);
    }

    /// <summary>Field number for the "oBox" field.</summary>
    public const int OBoxFieldNumber = 1;
    private global::Bitub.Transfer.Spatial.OBox oBox_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bitub.Transfer.Spatial.OBox OBox {
      get { return oBox_; }
      set {
        oBox_ = value;
      }
    }

    /// <summary>Field number for the "aBox" field.</summary>
    public const int ABoxFieldNumber = 2;
    private global::Bitub.Transfer.Spatial.ABox aBox_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bitub.Transfer.Spatial.ABox ABox {
      get { return aBox_; }
      set {
        aBox_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BoundingBox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BoundingBox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OBox, other.OBox)) return false;
      if (!object.Equals(ABox, other.ABox)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (oBox_ != null) hash ^= OBox.GetHashCode();
      if (aBox_ != null) hash ^= ABox.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (oBox_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OBox);
      }
      if (aBox_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ABox);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (oBox_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OBox);
      }
      if (aBox_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ABox);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BoundingBox other) {
      if (other == null) {
        return;
      }
      if (other.oBox_ != null) {
        if (oBox_ == null) {
          OBox = new global::Bitub.Transfer.Spatial.OBox();
        }
        OBox.MergeFrom(other.OBox);
      }
      if (other.aBox_ != null) {
        if (aBox_ == null) {
          ABox = new global::Bitub.Transfer.Spatial.ABox();
        }
        ABox.MergeFrom(other.ABox);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (oBox_ == null) {
              OBox = new global::Bitub.Transfer.Spatial.OBox();
            }
            input.ReadMessage(OBox);
            break;
          }
          case 18: {
            if (aBox_ == null) {
              ABox = new global::Bitub.Transfer.Spatial.ABox();
            }
            input.ReadMessage(ABox);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Bounding box having a population indicator
  /// </summary>
  public sealed partial class Region : pb::IMessage<Region> {
    private static readonly pb::MessageParser<Region> _parser = new pb::MessageParser<Region>(() => new Region());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Region> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bitub.Transfer.Spatial.SpatialReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Region() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Region(Region other) : this() {
      population_ = other.population_;
      label_ = other.label_;
      boundingBox_ = other.boundingBox_ != null ? other.boundingBox_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Region Clone() {
      return new Region(this);
    }

    /// <summary>Field number for the "population" field.</summary>
    public const int PopulationFieldNumber = 1;
    private int population_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Population {
      get { return population_; }
      set {
        population_ = value;
      }
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 2;
    private string label_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Label {
      get { return label_; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "boundingBox" field.</summary>
    public const int BoundingBoxFieldNumber = 3;
    private global::Bitub.Transfer.Spatial.BoundingBox boundingBox_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bitub.Transfer.Spatial.BoundingBox BoundingBox {
      get { return boundingBox_; }
      set {
        boundingBox_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Region);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Region other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Population != other.Population) return false;
      if (Label != other.Label) return false;
      if (!object.Equals(BoundingBox, other.BoundingBox)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Population != 0) hash ^= Population.GetHashCode();
      if (Label.Length != 0) hash ^= Label.GetHashCode();
      if (boundingBox_ != null) hash ^= BoundingBox.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Population != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Population);
      }
      if (Label.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Label);
      }
      if (boundingBox_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(BoundingBox);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Population != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Population);
      }
      if (Label.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
      }
      if (boundingBox_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BoundingBox);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Region other) {
      if (other == null) {
        return;
      }
      if (other.Population != 0) {
        Population = other.Population;
      }
      if (other.Label.Length != 0) {
        Label = other.Label;
      }
      if (other.boundingBox_ != null) {
        if (boundingBox_ == null) {
          BoundingBox = new global::Bitub.Transfer.Spatial.BoundingBox();
        }
        BoundingBox.MergeFrom(other.BoundingBox);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Population = input.ReadInt32();
            break;
          }
          case 18: {
            Label = input.ReadString();
            break;
          }
          case 26: {
            if (boundingBox_ == null) {
              BoundingBox = new global::Bitub.Transfer.Spatial.BoundingBox();
            }
            input.ReadMessage(BoundingBox);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// View point using a global position, a view direction and clipping planes
  /// </summary>
  public sealed partial class Viewpoint : pb::IMessage<Viewpoint> {
    private static readonly pb::MessageParser<Viewpoint> _parser = new pb::MessageParser<Viewpoint>(() => new Viewpoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Viewpoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bitub.Transfer.Spatial.SpatialReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Viewpoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Viewpoint(Viewpoint other) : this() {
      base_ = other.base_ != null ? other.base_.Clone() : null;
      forward_ = other.forward_ != null ? other.forward_.Clone() : null;
      near_ = other.near_;
      far_ = other.far_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Viewpoint Clone() {
      return new Viewpoint(this);
    }

    /// <summary>Field number for the "base" field.</summary>
    public const int BaseFieldNumber = 1;
    private global::Bitub.Transfer.Spatial.XYZ base_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bitub.Transfer.Spatial.XYZ Base {
      get { return base_; }
      set {
        base_ = value;
      }
    }

    /// <summary>Field number for the "forward" field.</summary>
    public const int ForwardFieldNumber = 2;
    private global::Bitub.Transfer.Spatial.XYZ forward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bitub.Transfer.Spatial.XYZ Forward {
      get { return forward_; }
      set {
        forward_ = value;
      }
    }

    /// <summary>Field number for the "near" field.</summary>
    public const int NearFieldNumber = 3;
    private float near_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Near {
      get { return near_; }
      set {
        near_ = value;
      }
    }

    /// <summary>Field number for the "far" field.</summary>
    public const int FarFieldNumber = 4;
    private float far_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Far {
      get { return far_; }
      set {
        far_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Viewpoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Viewpoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Base, other.Base)) return false;
      if (!object.Equals(Forward, other.Forward)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Near, other.Near)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Far, other.Far)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (base_ != null) hash ^= Base.GetHashCode();
      if (forward_ != null) hash ^= Forward.GetHashCode();
      if (Near != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Near);
      if (Far != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Far);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (base_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Base);
      }
      if (forward_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Forward);
      }
      if (Near != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Near);
      }
      if (Far != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Far);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (base_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Base);
      }
      if (forward_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Forward);
      }
      if (Near != 0F) {
        size += 1 + 4;
      }
      if (Far != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Viewpoint other) {
      if (other == null) {
        return;
      }
      if (other.base_ != null) {
        if (base_ == null) {
          Base = new global::Bitub.Transfer.Spatial.XYZ();
        }
        Base.MergeFrom(other.Base);
      }
      if (other.forward_ != null) {
        if (forward_ == null) {
          Forward = new global::Bitub.Transfer.Spatial.XYZ();
        }
        Forward.MergeFrom(other.Forward);
      }
      if (other.Near != 0F) {
        Near = other.Near;
      }
      if (other.Far != 0F) {
        Far = other.Far;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (base_ == null) {
              Base = new global::Bitub.Transfer.Spatial.XYZ();
            }
            input.ReadMessage(Base);
            break;
          }
          case 18: {
            if (forward_ == null) {
              Forward = new global::Bitub.Transfer.Spatial.XYZ();
            }
            input.ReadMessage(Forward);
            break;
          }
          case 29: {
            Near = input.ReadFloat();
            break;
          }
          case 37: {
            Far = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
